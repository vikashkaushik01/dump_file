Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
azureuser@private-vm:~/last/terraform-modules/NPM-workflow/AKS-NPM-workflow$ terraform apply --auto-approve
module.n4k_module.nirmata_cluster_registered.aks-registered: Refreshing state... [id=96ff2d38-c02f-4cbb-9bde-f6e12712dc17]
module.n4k_module.data.azurerm_kubernetes_cluster.cluster: Reading...
module.n4k_module.data.azurerm_kubernetes_cluster.cluster: Read complete after 2s [id=/subscriptions/baf89069-e8f3-46f8-b74e-c146931ce7a4/resourceGroups/vikash-custodian-testing/providers/Microsoft.ContainerService/managedClusters/private-aks]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
 <= read (data resources)

Terraform will perform the following actions:

  # module.n4k_module.data.kubectl_filename_list.crd will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "kubectl_filename_list" "crd" {
      + basenames = (known after apply)
      + id        = (known after apply)
      + matches   = (known after apply)
      + pattern   = "/tmp/controller-3611238189/temp-03-*"
    }

  # module.n4k_module.data.kubectl_filename_list.deployment will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "kubectl_filename_list" "deployment" {
      + basenames = (known after apply)
      + id        = (known after apply)
      + matches   = (known after apply)
      + pattern   = "/tmp/controller-3611238189/temp-04-*"
    }

  # module.n4k_module.data.kubectl_filename_list.namespace will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "kubectl_filename_list" "namespace" {
      + basenames = (known after apply)
      + id        = (known after apply)
      + matches   = (known after apply)
      + pattern   = "/tmp/controller-3611238189/temp-01-*"
    }

  # module.n4k_module.data.kubectl_filename_list.secret will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "kubectl_filename_list" "secret" {
      + basenames = (known after apply)
      + id        = (known after apply)
      + matches   = (known after apply)
      + pattern   = "/tmp/controller-3611238189/temp-02-*"
    }

  # module.n4k_module.kubectl_manifest.crd[0] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[1] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[2] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[3] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[4] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[5] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[6] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[7] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[8] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[9] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.crd[10] will be created
  + resource "kubectl_manifest" "crd" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.deployment[0] will be created
  + resource "kubectl_manifest" "deployment" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.deployment[1] will be created
  + resource "kubectl_manifest" "deployment" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.namespace[0] will be created
  + resource "kubectl_manifest" "namespace" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.kubectl_manifest.secret[0] will be created
  + resource "kubectl_manifest" "secret" {
      + api_version             = (known after apply)
      + apply_only              = true
      + force_conflicts         = false
      + force_new               = false
      + id                      = (known after apply)
      + kind                    = (known after apply)
      + live_manifest_incluster = (sensitive value)
      + live_uid                = (known after apply)
      + name                    = (known after apply)
      + namespace               = (known after apply)
      + server_side_apply       = false
      + uid                     = (known after apply)
      + validate_schema         = true
      + wait                    = true
      + wait_for_rollout        = true
      + yaml_body               = (sensitive value)
      + yaml_body_parsed        = (known after apply)
      + yaml_incluster          = (sensitive value)
    }

  # module.n4k_module.nirmata_cluster_registered.aks-registered will be updated in-place
  ~ resource "nirmata_cluster_registered" "aks-registered" {
      - delete_action                 = "remove" -> null
        id                            = "96ff2d38-c02f-4cbb-9bde-f6e12712dc17"
        name                          = "newv1225-aks"
        # (9 unchanged attributes hidden)
    }

Plan: 15 to add, 1 to change, 0 to destroy.
module.n4k_module.nirmata_cluster_registered.aks-registered: Modifying... [id=96ff2d38-c02f-4cbb-9bde-f6e12712dc17]
module.n4k_module.nirmata_cluster_registered.aks-registered: Modifications complete after 0s [id=96ff2d38-c02f-4cbb-9bde-f6e12712dc17]
module.n4k_module.data.kubectl_filename_list.crd: Reading...
module.n4k_module.data.kubectl_filename_list.namespace: Reading...
module.n4k_module.data.kubectl_filename_list.namespace: Read complete after 0s [id=56a8e45745e06d3d3f8cad3125321fcc004b0f1684a4574c50d0fee8f795c6c2]
module.n4k_module.data.kubectl_filename_list.secret: Reading...
module.n4k_module.data.kubectl_filename_list.deployment: Reading...
module.n4k_module.data.kubectl_filename_list.deployment: Read complete after 0s [id=35603267dbc67a97d793b6128aa5ab6cb9ba7bc1d3d8fb802a72e724ccbf289a]
module.n4k_module.data.kubectl_filename_list.secret: Read complete after 0s [id=0ffe72f68c167bfe1351baf4527c657fd0ca80751e37a82214692f7a6f8dc519]
module.n4k_module.data.kubectl_filename_list.crd: Read complete after 0s [id=03608b360b151d374c6fdd9d7ad757a588e8d9c2add7b0013cf4887c2a6cbc75]
module.n4k_module.kubectl_manifest.namespace[0]: Creating...
module.n4k_module.kubectl_manifest.namespace[0]: Creation complete after 0s [id=/api/v1/namespaces/nirmata]
module.n4k_module.kubectl_manifest.secret[0]: Creating...
module.n4k_module.kubectl_manifest.secret[0]: Creation complete after 0s [id=/api/v1/namespaces/nirmata/secrets/nirmata-sa-secret]
module.n4k_module.kubectl_manifest.crd[6]: Creating...
module.n4k_module.kubectl_manifest.crd[0]: Creating...
module.n4k_module.kubectl_manifest.crd[10]: Creating...
module.n4k_module.kubectl_manifest.crd[8]: Creating...
module.n4k_module.kubectl_manifest.crd[4]: Creating...
module.n4k_module.kubectl_manifest.crd[2]: Creating...
module.n4k_module.kubectl_manifest.crd[1]: Creating...
module.n4k_module.kubectl_manifest.crd[9]: Creating...
module.n4k_module.kubectl_manifest.crd[5]: Creating...
module.n4k_module.kubectl_manifest.crd[7]: Creating...
module.n4k_module.kubectl_manifest.crd[0]: Creation complete after 0s [id=/api/v1/namespaces/nirmata/serviceaccounts/nirmata]
module.n4k_module.kubectl_manifest.crd[3]: Creating...
module.n4k_module.kubectl_manifest.crd[8]: Creation complete after 0s [id=/api/v1/namespaces/nirmata/configmaps/nirmata-kube-controller-config]
module.n4k_module.kubectl_manifest.crd[10]: Creation complete after 0s [id=/api/v1/namespaces/nirmata/configmaps/otel-agent-config]
module.n4k_module.kubectl_manifest.crd[4]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/nirmata-controller-binding]
module.n4k_module.kubectl_manifest.crd[6]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/nirmata:policyexception-manager]
module.n4k_module.kubectl_manifest.crd[3]: Creation complete after 0s [id=/api/v1/namespaces/nirmata/serviceaccounts/nirmata-controller]
module.n4k_module.kubectl_manifest.crd[1]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/nirmata-cluster-admin-binding]
module.n4k_module.kubectl_manifest.crd[2]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/namespaces/nirmata/rolebindings/nirmata-admin-binding]
module.n4k_module.kubectl_manifest.crd[5]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterroles/nirmata:policyexception-manager]
module.n4k_module.kubectl_manifest.crd[9]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterroles/nirmata:nirmata-operator]
module.n4k_module.kubectl_manifest.crd[7]: Creation complete after 0s [id=/apis/rbac.authorization.k8s.io/v1/clusterroles/nirmata:nirmata-privileged]
module.n4k_module.kubectl_manifest.deployment[0]: Creating...
module.n4k_module.kubectl_manifest.deployment[1]: Creating...
module.n4k_module.kubectl_manifest.deployment[1]: Creation complete after 0s [id=/apis/apps/v1/namespaces/nirmata/deployments/otel-agent]
module.n4k_module.kubectl_manifest.deployment[0]: Creation complete after 0s [id=/apis/apps/v1/namespaces/nirmata/deployments/nirmata-kube-controller]

Apply complete! Resources: 15 added, 1 changed, 0 destroyed.
