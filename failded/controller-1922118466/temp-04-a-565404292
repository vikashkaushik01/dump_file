
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "nirmata-kube-controller"
  namespace: "nirmata"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "nirmata-kube-controller"
      nirmata.io/container.type: "system"
      app.kubernetes.io/name: "nirmata"
      app.kubernetes.io/instance: "nirmata"
  template:
    metadata:
      labels:
        app: "nirmata-kube-controller"
        nirmata.io/container.type: "system"
        app.kubernetes.io/name: "nirmata"
        app.kubernetes.io/instance: "nirmata"
    spec:
      containers:
      - args:
        - "-token"
        - "$(TOKEN)"
        - "-url"
        - "$(URL)"
        - "-event-aggregation"
        command:
        - "/nirmata-kube-controller"
        env:
        - name: "TOKEN"
          value: "ebd5defa-1e4f-4a76-96d1-cad583a653bb"
        - name: "URL"
          value: "wss://www.nirmata.io/tunnels"
        image: "ghcr.io/nirmata/nirmata-kube-controller:v3.9.7"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
            - "/nirmata-kube-controller"
        name: "nirmata-kube-controller"
        readinessProbe:
          exec:
            command:
            - "/nirmata-kube-controller"
        resources:
          limits:
            memory: "512Mi"
          requests:
            memory: "200Mi"
            cpu: "250m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: "RuntimeDefault"
      hostNetwork: false
      imagePullSecrets:
      - name: "nirmata-controller-registry-secret"
      securityContext:
        seccompProfile:
          type: "RuntimeDefault"
      serviceAccountName: "nirmata"
      tolerations:
      - effect: "NoSchedule"
        key: "node-role.kubernetes.io/master"
        operator: "Exists"
